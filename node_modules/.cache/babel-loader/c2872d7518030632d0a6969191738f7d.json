{"ast":null,"code":"import _defineProperty from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/recipes/RecipeApp.js\";\nimport React, { Component } from 'react'; // import List from './List';\n\nimport '../styles/RecipeApp.css';\nimport RecipeList from './RecipeList';\n\nvar RecipeApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeApp, _Component);\n\n  function RecipeApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RecipeApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RecipeApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      recipes: [{\n        id: 0,\n        title: \"Spaghetti\",\n        ingredients: [\"pasta\", \"spaghetti sauce\"]\n      }, {\n        id: 1,\n        title: \"PB&J Sandwiches\",\n        ingredients: [\"Bread\", \"Peanut Butter\", \"Jelly\"]\n      }],\n      nextRecipeId: 2 //LocalStorage:\n\n    };\n\n    _this.onSave = function (recipe) {\n      _this.setState(function (prevState) {\n        var newRecipe = _objectSpread({}, recipe, {\n          id: _this.state.nextRecipeId\n        });\n\n        return {\n          nextRecipeId: prevState.nextRecipeId + 1,\n          recipes: _toConsumableArray(_this.state.recipes).concat([newRecipe])\n        };\n      });\n    };\n\n    _this.onDelete = function (id) {\n      var recipes = _this.state.recipes.filter(function (r) {\n        return r.id !== id;\n      });\n\n      _this.setState({\n        recipes: recipes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RecipeApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      } // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      // update react state\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.upRecipes.length)\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Add a recipe:\"), React.createElement(RecipeList, {\n        onDelete: this.onDelete,\n        recipes: this.state.recipes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(RecipeInput, {\n        onSave: this.onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeApp;\n}(Component);\n\nexport default RecipeApp;\n\nvar Recipe =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Recipe, _Component2);\n\n  function Recipe() {\n    _classCallCheck(this, Recipe);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Recipe).apply(this, arguments));\n  }\n\n  _createClass(Recipe, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          id = _this$props.id,\n          onDelete = _this$props.onDelete;\n      var ingredients = this.props.ingredients.map(function (ing, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, ing);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"delrec\",\n        type: \"button\",\n        onClick: function onClick() {\n          return onDelete(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"delete recipe\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, title), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, ingredients), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Recipe;\n}(Component);\n\nvar RecipeInput =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(RecipeInput, _Component3);\n\n  function RecipeInput() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, RecipeInput);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(RecipeInput)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this2.state = {\n      title: '',\n      ingredients: ['']\n    };\n\n    _this2.handleChange = function (e) {\n      _this2.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this2.handleNewIngredient = function (e) {\n      var ingredients = _this2.state.ingredients;\n\n      _this2.setState({\n        ingredients: _toConsumableArray(ingredients).concat([''])\n      });\n    };\n\n    _this2.handleChangeIng = function (e) {\n      var index = Number(e.target.name.split('-')[1]);\n\n      var ingredients = _this2.state.ingredients.map(function (ing, i) {\n        return i === index ? e.target.value : ing;\n      });\n\n      _this2.setState({\n        ingredients: ingredients\n      });\n    };\n\n    _this2.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this2.props.onSave(_objectSpread({}, _this2.state));\n\n      _this2.setState({\n        title: '',\n        ingredients: ['']\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(RecipeInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          title = _this$state.title,\n          ingredients = _this$state.ingredients; //const {onClose} = this.props;\n\n      var inputs = ingredients.map(function (ing, i) {\n        return React.createElement(\"div\", {\n          className: \"recipe-form-line\",\n          key: \"ingredient-\".concat(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, i + 1, \".\", React.createElement(\"input\", {\n          type: \"text\",\n          name: \"ingredient-\".concat(i),\n          value: ing,\n          autoComplete: \"off\",\n          placeholder: \" Ingredient\",\n          onChange: _this3.handleChangeIng,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        className: \"recipe-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"recipe-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"title:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-title-input\",\n        key: \"title\",\n        name: \"title\",\n        type: \"text\",\n        value: title,\n        autoComplete: \"off\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), \"List ingredents:\", inputs, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleNewIngredient,\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"buttons\",\n        style: {\n          alignSelf: 'flex-end',\n          marginRight: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"save recipe\")));\n    }\n  }]);\n\n  return RecipeInput;\n}(Component);\n\nRecipeInput.defaultProps = {\n  onClose: function onClose() {},\n  onSave: function onSave() {}\n};","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/recipes/RecipeApp.js"],"names":["React","Component","RecipeList","RecipeApp","state","recipes","id","title","ingredients","nextRecipeId","onSave","recipe","setState","prevState","newRecipe","onDelete","filter","r","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","e","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","setItem","stringify","Recipe","props","map","ing","index","RecipeInput","handleChange","target","name","handleNewIngredient","handleChangeIng","Number","split","i","handleSubmit","preventDefault","inputs","alignSelf","marginRight","defaultProps","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import List from './List';\nimport '../styles/RecipeApp.css'\nimport RecipeList from './RecipeList'\n\nclass RecipeApp extends Component {\n \n    state = {\n      recipes: [\n        {\n          id: 0,\n          title: \"Spaghetti\",\n          ingredients: [\"pasta\", \"spaghetti sauce\"],\n        },\n        {\n          id: 1,\n          title: \"PB&J Sandwiches\",\n          ingredients: [\"Bread\", \"Peanut Butter\", \"Jelly\"],\n        }\n      ],\n      nextRecipeId: 2     \n    }\n    \n //LocalStorage:\n  componentDidMount() {\n    // for all items in state\n    for (let key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          let value = localStorage.getItem(key);\n  \n          // parse the localStorage string and setState\n          try {\n            value = JSON.parse(value);\n            this.setState({ [key]: value });\n          } catch (e) {\n            // handle empty string\n            this.setState({ [key]: value });\n          }\n        }\n      }\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n\n  }\n\n\n\n\n    onSave = (recipe) => {\n      this.setState((prevState) => {\n        const newRecipe = {...recipe, id: this.state.nextRecipeId};\n        return {\n          nextRecipeId: prevState.nextRecipeId + 1,\n          recipes: [...this.state.recipes, newRecipe],\n         \n        }\n      });\n    }\n    \n    onDelete = (id) => {\n      const recipes = this.state.recipes.filter(r => r.id !== id);\n      this.setState({recipes});\n    }\n    \n    render() {\n      // console.log(this.props.upRecipes.length)\n      return (\n        \n        <div className=\"App\">\n\n         <div className=\"container\">\n          \n          \n          <h3>Add a recipe:</h3>\n          \n          <RecipeList onDelete={this.onDelete} \n              recipes={this.state.recipes} />\n              <RecipeInput onSave={this.onSave} /> \n              \n        </div></div>\n      );\n    }\n\n  }\n  \n  export default RecipeApp;\n\n\n\nclass Recipe extends Component{\n    render(){\n        const {title, id, onDelete} = this.props;\n        const ingredients = this.props.ingredients.map((ing,index) => ( \n            <li key={index}>{ing}</li>\n        ))\n        return(<div>\n          <button className=\"delrec\" type=\"button\" onClick={() => onDelete(id)}>delete recipe</button>\n            <div>{title}</div>\n            <ul>{ingredients}</ul>\n           \n            <hr />\n        </div>)\n    }\n}\n\n\nclass RecipeInput extends Component {\n    static defaultProps = {\n      onClose() {},\n      onSave() {}\n    }\n    \n\n    state = {\n        title: '',\n        ingredients: [''],\n      }  \n\n    \n    \n    handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value});\n    }\n    \n    handleNewIngredient = (e) =>{\n      const {ingredients} = this.state;\n      this.setState({ingredients: [...ingredients, '']});\n    }\n    \n    handleChangeIng = (e) =>{\n      const index = Number(e.target.name.split('-')[1]);\n      const ingredients = this.state.ingredients.map((ing, i) => (\n        i === index ? e.target.value : ing\n      ));\n      this.setState({ingredients});\n    }\n    \n    handleSubmit = (e) =>{\n      e.preventDefault();\n      this.props.onSave({...this.state});\n      this.setState({\n        title: '',\n        ingredients: [''],\n      })\n    }\n    \n    render() {\n      const {title, ingredients} = this.state;\n      //const {onClose} = this.props;\n      let inputs = ingredients.map((ing, i) => (\n        <div\n          className=\"recipe-form-line\"\n          key={`ingredient-${i}`}\n        >\n          <label>{i+1}.\n            <input\n              type=\"text\"\n              name={`ingredient-${i}`}\n              value={ing}\n              \n              autoComplete=\"off\"\n              placeholder=\" Ingredient\"\n              onChange={this.handleChangeIng} />\n          </label>\n        </div>\n      ));\n      \n      return (\n        <div className=\"recipe-form-container\">\n          <form className='recipe-form' onSubmit={this.handleSubmit}>\n\n            <div className='recipe-form-line'>\n              <label htmlFor='recipe-title-input'>title:</label>\n              <br />\n              <input\n                id='recipe-title-input'\n                key='title'\n                name='title'\n                type='text'\n                value={title}\n                autoComplete=\"off\"\n                onChange={this.handleChange}/>\n            </div>\n            List ingredents:\n            {inputs}\n            <button\n              type=\"button\"\n              onClick={this.handleNewIngredient}\n              className=\"buttons\"\n            >\n              +\n            </button>\n \n            <button\n              type=\"submit\"\n              className=\"buttons\"\n              style={{alignSelf: 'flex-end', marginRight: 0}}\n            >\n              save recipe\n            </button>\n\n          </form>\n        </div>\n      )\n    }\n  }\n  \n  \n\n"]},"metadata":{},"sourceType":"module"}