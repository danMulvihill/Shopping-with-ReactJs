{"ast":null,"code":"import _objectSpread from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/groceries/GrocInput.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\n\nvar GrocInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GrocInput, _Component);\n\n  function GrocInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GrocInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GrocInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      item: \"\",\n      selectedOption: null\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      selectedOption: null\n    };\n\n    _this.handleChange2 = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    _this.handleChangeSec = function (selectedOption, e) {\n      //this.setState({[e.target.name]: e.target.value});\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"Option picked: \", selectedOption.value);\n    };\n\n    _this.getOptions = function () {\n      console.log(_this.props.sections.value);\n      return _this.props.sections;\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.onSave(_objectSpread({}, _this.state));\n\n      _this.setState({\n        item: '',\n        quantity: 1,\n        section: ''\n      });\n\n      _this.props.changeSection(\"All\");\n    };\n\n    return _this;\n  }\n\n  _createClass(GrocInput, [{\n    key: \"render\",\n    value: function render() {\n      var options2 = [{\n        value: 'chocolate',\n        label: 'Chocolate'\n      }, {\n        value: 'strawberry',\n        label: 'Strawberry'\n      }, {\n        value: 'vanilla',\n        label: 'Vanilla'\n      }];\n      var _this$state = this.state,\n          item = _this$state.item,\n          quantity = _this$state.quantity,\n          selectedOption = _this$state.selectedOption;\n      return React.createElement(\"div\", {\n        className: \"recipe-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"recipe-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-item-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"item:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-item-input\",\n        key: \"item\",\n        name: \"item\",\n        type: \"text\",\n        value: item,\n        autoComplete: \"on\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"recipe-quantity-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"quantity:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-quantity-input\",\n        key: \"quantity\",\n        name: \"quantity\",\n        type: \"number\",\n        min: \"1\",\n        value: quantity || 1,\n        autoComplete: \"off\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-item-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" section:\"), React.createElement(Select, {\n        id: \"recipe-section-input\",\n        key: \"section\",\n        name: \"section\",\n        autoComplete: \"on\",\n        value: selectedOption,\n        onChange: this.handleChangeSec,\n        options: this.props.sections,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChange2,\n        options: options2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"recipe-section-input\",\n        key: \"section1\",\n        name: \"section1\",\n        onChange: this.handleChangeSec,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.props.sections.map(function (optionItem) {\n        return React.createElement(\"option\", {\n          value: optionItem.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, optionItem.value);\n      }))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"buttons btn btn-primary btn-block\",\n        style: {\n          alignSelf: 'flex-end',\n          marginRight: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"add item\")));\n    }\n  }]);\n\n  return GrocInput;\n}(Component);\n\nGrocInput.defaultProps = {\n  onClose: function onClose() {},\n  onSave: function onSave() {}\n};\nexport { GrocInput as default };","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/groceries/GrocInput.js"],"names":["React","Component","Select","GrocInput","state","item","selectedOption","handleChange","e","setState","target","name","value","handleChange2","console","log","handleChangeSec","getOptions","props","sections","handleSubmit","preventDefault","onSave","quantity","section","changeSection","options2","label","map","optionItem","alignSelf","marginRight","defaultProps","onClose"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAIqBC,S;;;;;;;;;;;;;;;;;UAQjBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,cAAc,EAAE;AAFV,K;;UAKRC,Y,GAAe,UAACC,CAAD,EAAO;AACpB,YAAKC,QAAL,qBAAgBD,CAAC,CAACE,MAAF,CAASC,IAAzB,EAAgCH,CAAC,CAACE,MAAF,CAASE,KAAzC;AACD,K;;UAEDR,K,GAAQ;AACNE,MAAAA,cAAc,EAAE;AADV,K;;UAGRO,a,GAAgB,UAACP,cAAD,EAAoB;AAClC,YAAKG,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAdA;AAAF,OAAd;;AACAQ,MAAAA,OAAO,CAACC,GAAR,qBAAgCT,cAAhC;AACD,K;;UAEDU,e,GAAkB,UAACV,cAAD,EAAiBE,CAAjB,EAAuB;AACrC;AACA,YAAKC,QAAL,CAAc;AAACH,QAAAA,cAAc,EAAEA;AAAjB,OAAd;;AACAQ,MAAAA,OAAO,CAACC,GAAR,oBAA+BT,cAAc,CAACM,KAA9C;AAED,K;;UAEHK,U,GAAY,YAAM;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKG,KAAL,CAAWC,QAAX,CAAoBP,KAAhC;AACA,aAAO,MAAKM,KAAL,CAAWC,QAAlB;AACD,K;;UAEDC,Y,GAAe,UAACZ,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACa,cAAF;;AAEA,YAAKH,KAAL,CAAWI,MAAX,mBAAsB,MAAKlB,KAA3B;;AACA,YAAKK,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAE,EADM;AAEZkB,QAAAA,QAAQ,EAAE,CAFE;AAGZC,QAAAA,OAAO,EAAE;AAHG,OAAd;;AAKA,YAAKN,KAAL,CAAWO,aAAX,CAAyB,KAAzB;AACD,K;;;;;;;6BAGQ;AACP,UAAMC,QAAQ,GAAG,CACf;AAAEd,QAAAA,KAAK,EAAE,WAAT;AAAsBe,QAAAA,KAAK,EAAE;AAA7B,OADe,EAEf;AAAEf,QAAAA,KAAK,EAAE,YAAT;AAAuBe,QAAAA,KAAK,EAAE;AAA9B,OAFe,EAGf;AAAEf,QAAAA,KAAK,EAAE,SAAT;AAAoBe,QAAAA,KAAK,EAAE;AAA3B,OAHe,CAAjB;AADO,wBAMkC,KAAKvB,KANvC;AAAA,UAMAC,IANA,eAMAA,IANA;AAAA,UAMMkB,QANN,eAMMA,QANN;AAAA,UAMgBjB,cANhB,eAMgBA,cANhB;AAOP,aACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAE,KAAKc,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AACE,QAAA,EAAE,EAAC,mBADL;AAEE,QAAA,GAAG,EAAC,MAFN;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAEf,IALT;AAME,QAAA,YAAY,EAAC,IANf;AAOE,QAAA,QAAQ,EAAE,KAAKE,YAPjB;AAQE,QAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAaI;AAAO,QAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI;AACE,QAAA,EAAE,EAAC,uBADL;AAEE,QAAA,GAAG,EAAC,UAFN;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,GAAG,EAAC,GALN;AAME,QAAA,KAAK,EAAEgB,QAAQ,IAAI,CANrB;AAOE,QAAA,YAAY,EAAC,KAPf;AAQE,QAAA,QAAQ,EAAE,KAAKhB,YARjB;AASE,QAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CAFF,EA6BI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE,oBAAC,MAAD;AAEE,QAAA,EAAE,EAAC,sBAFL;AAGE,QAAA,GAAG,EAAC,SAHN;AAIE,QAAA,IAAI,EAAC,SAJP;AAKE,QAAA,YAAY,EAAC,IALf;AAME,QAAA,KAAK,EAAED,cANT;AAOE,QAAA,QAAQ,EAAE,KAAKU,eAPjB;AAQE,QAAA,OAAO,EAAG,KAAKE,KAAL,CAAWC,QARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAeE,oBAAC,MAAD;AACA,QAAA,KAAK,EAAEb,cADP;AAEA,QAAA,QAAQ,EAAE,KAAKO,aAFf;AAGA,QAAA,OAAO,EAAEa,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAqBE;AAAQ,QAAA,EAAE,EAAC,sBAAX;AACE,QAAA,GAAG,EAAC,UADN;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAE,KAAKV,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKE,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwB,UAACC,UAAD,EAAc;AACrC,eAAO;AAAQ,UAAA,KAAK,EAAEA,UAAU,CAACjB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCiB,UAAU,CAACjB,KAA7C,CAAP;AACD,OAFA,CAJH,CArBF,CA7BJ,EA8DE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,mCAFZ;AAGE,QAAA,KAAK,EAAE;AAACkB,UAAAA,SAAS,EAAE,UAAZ;AAAwBC,UAAAA,WAAW,EAAE;AAArC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9DF,CADF,CADF;AA6ED;;;;EAtIkC9B,S;;AAAlBE,S,CACV6B,Y,GAAe;AACpBC,EAAAA,OADoB,qBACV,CAAE,CADQ;AAEpBX,EAAAA,MAFoB,oBAEX,CAAE;AAFS,C;SADLnB,S","sourcesContent":["\nimport React, { Component } from 'react'\nimport Select from 'react-select';\n\n\n\nexport default class GrocInput extends Component {\n    static defaultProps = {\n      onClose() {},\n      onSave() {}\n    }\n\n\n    \n    state = {\n      item: \"\",\n      selectedOption: null\n    };\n    \n    handleChange = (e) => {\n      this.setState({[e.target.name]: e.target.value});\n    }\n\n    state = {\n      selectedOption: null,\n    }\n    handleChange2 = (selectedOption) => {\n      this.setState({ selectedOption });\n      console.log(`Option selected:`, selectedOption);\n    }\n\n    handleChangeSec = (selectedOption, e) => {\n        //this.setState({[e.target.name]: e.target.value});\n        this.setState({selectedOption: selectedOption});\n        console.log(`Option picked: `, selectedOption.value)\n        \n      }\n\n    getOptions =() => {\n      console.log(this.props.sections.value)\n      return this.props.sections\n    }\n    \n    handleSubmit = (e) => {\n      e.preventDefault();\n      \n      this.props.onSave({...this.state});\n      this.setState({\n        item: '',\n        quantity: 1,\n        section: ''\n      })\n      this.props.changeSection(\"All\")\n    }\n\n\n    render() {\n      const options2 = [\n        { value: 'chocolate', label: 'Chocolate' },\n        { value: 'strawberry', label: 'Strawberry' },\n        { value: 'vanilla', label: 'Vanilla' }\n      ];\n      const {item, quantity, selectedOption} = this.state;\n      return (\n        <div className=\"recipe-form-container\">\n          <form className='recipe-form' onSubmit={this.handleSubmit}>\n\n            <div className='recipe-form-line'>\n              <label htmlFor='recipe-item-input'>item:</label>\n              <br />\n              <input\n                id='recipe-item-input'\n                key='item'\n                name='item'\n                type='text'\n                value={item}\n                autoComplete=\"on\"\n                onChange={this.handleChange}\n                required\n                />\n                <label htmlFor='recipe-quantity-input'>quantity:</label>\n                <br />\n                <input\n                  id='recipe-quantity-input'\n                  key='quantity'\n                  name='quantity'\n                  type='number'\n                  min=\"1\"\n                  value={quantity || 1}\n                  autoComplete=\"off\"\n                  onChange={this.handleChange}\n                  required\n                  />\n              </div>\n              <div className='recipe-form-line'>\n                <label htmlFor='recipe-item-input'> section:</label>\n                \n                <Select \n                  \n                  id='recipe-section-input'\n                  key='section'\n                  name='section'\n                  autoComplete=\"on\"\n                  value={selectedOption}\n                  onChange={this.handleChangeSec}\n                  options={ this.props.sections }\n               \n                />\n\n                <Select\n                value={selectedOption}\n                onChange={this.handleChange2}\n                options={options2}\n              />\n\n                <select id=\"recipe-section-input\" \n                  key='section1'\n                  name='section1'\n                  onChange={this.handleChangeSec}>\n                  {this.props.sections.map((optionItem)=>{\n                    return <option value={optionItem.value}>{optionItem.value}</option>\n                  })}\n\n              </select>\n            </div>\n             \n\n            <button\n              type=\"submit\"\n              className=\"buttons btn btn-primary btn-block\"\n              style={{alignSelf: 'flex-end', marginRight: 0}}\n            >\n              add item\n            </button>\n            \n\n\n          </form>\n        </div>\n      )\n    }\n  }\n  \n  "]},"metadata":{},"sourceType":"module"}