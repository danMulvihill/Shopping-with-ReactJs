{"ast":null,"code":"import _defineProperty from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/List.js\";\nimport React, { Component } from 'react';\nimport { createStore } from 'redux';\nimport Select from 'react-select';\nvar store = createStore(function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  return state;\n});\nconsole.log(store.getState());\n\nvar ListApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListApp, _Component);\n\n  function ListApp(props) {\n    var _this;\n\n    _classCallCheck(this, ListApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListApp).call(this, props)); //this.onSave = this.onSave.bind(this);\n    //this.onDelete = this.onDelete.bind(this);\n\n    _this.onSave = function (grocs) {\n      _this.setState(function (prevState) {\n        var newGroc = _objectSpread({}, grocs, {\n          id: _this.state.nextGrocId\n        });\n\n        return {\n          nextGrocId: prevState.nextGrocId + 1,\n          grocs: _toConsumableArray(_this.state.grocs).concat([newGroc])\n        };\n      });\n    };\n\n    _this.onDelete = function (id) {\n      var grocs = _this.state.grocs.filter(function (r) {\n        return r.id !== id;\n      });\n\n      _this.setState({\n        grocs: grocs\n      });\n    };\n\n    _this.state = {\n      grocs: [{\n        id: 0,\n        title: \"Eggs\",\n        section: \"Refrigerated\",\n        ingredients: []\n      }, {\n        id: 1,\n        title: \"Bananas\",\n        section: \"Produce\",\n        ingredients: []\n      }],\n      nextGrocId: 2\n    };\n    return _this;\n  } //LocalStorage:\n\n\n  _createClass(ListApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      } // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      // update react state\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.upGrocs.length)\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"List groceries here:\"), React.createElement(GrocInput, {\n        onSave: this.onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(GrocList, {\n        onDelete: this.onDelete,\n        grocs: this.state.grocs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ListApp;\n}(Component);\n\nexport default ListApp;\n\nvar GrocInput =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(GrocInput, _Component2);\n\n  function GrocInput() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, GrocInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GrocInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this2.handleChange = function (e) {\n      _this2.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this2.handleChangeSec = function (selectedOption) {\n      //this.setState({[e.target.name]: e.target.value});\n      _this2.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"Option picked: \", selectedOption.value);\n    };\n\n    _this2.getOptions = function () {\n      return [{\n        value: 'produce',\n        label: 'Produce'\n      }, {\n        value: 'frozen',\n        label: 'Frozen'\n      }, {\n        value: 'refrigerated',\n        label: 'Refrigerated'\n      }];\n    };\n\n    _this2.handleNewIngredient = function (e) {\n      var ingredients = _this2.state.ingredients;\n\n      _this2.setState({\n        ingredients: _toConsumableArray(ingredients).concat([''])\n      });\n    };\n\n    _this2.handleChangeIng = function (e) {\n      var index = Number(e.target.name.split('-')[1]);\n\n      var ingredients = _this2.state.ingredients.map(function (ing, i) {\n        return i === index ? e.target.value : ing;\n      });\n\n      _this2.setState({\n        ingredients: ingredients\n      });\n    };\n\n    _this2.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this2.props.onSave(_objectSpread({}, _this2.state));\n\n      _this2.setState({\n        title: '',\n        section: '',\n        ingredients: ['']\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(GrocInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          title = _this$state.title,\n          selectedOption = _this$state.selectedOption; //const {onClose} = this.props;\n      // let inputs = ingredients.map((ing, i) => (\n      //   <div\n      //     className=\"recipe-form-line\"\n      //     key={`ingredient-${i}`}\n      //   >\n      //     <label>{i+1}.\n      //       <input\n      //         type=\"text\"\n      //         name={`ingredient-${i}`}\n      //         value={ing}\n      //         autoComplete=\"off\"\n      //         placeholder=\" Ingredient\"\n      //         onChange={this.handleChangeIng} />\n      //     </label>\n      //   </div>\n      // ));\n      //   let sectionOptions = section.map(section =>{\n      //     return <option key={section} value=\"section\">{section} </option> \n      //   }) \n\n      return React.createElement(\"div\", {\n        className: \"recipe-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"recipe-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"item:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-title-input\",\n        key: \"title\",\n        name: \"title\",\n        type: \"text\",\n        value: title,\n        autoComplete: \"off\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \" section:\"), React.createElement(Select, {\n        id: \"recipe-section-input\",\n        key: \"section\",\n        name: \"section\" //value={section}\n        ,\n        autoComplete: \"off\",\n        value: selectedOption,\n        onChange: this.handleChangeSec,\n        options: this.getOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"buttons\",\n        style: {\n          alignSelf: 'flex-end',\n          marginRight: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"add item\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), \"Filter by:\", React.createElement(\"select\", {\n        id: \"section-pick\",\n        name: \"section-pick\",\n        onChange: function onChange(e) {\n          return _this3.updateInput(\"newSection\", e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Produce\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Refrigerated\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Frozen\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Pharma\"), React.createElement(\"option\", {\n        value: \"\",\n        checked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Other\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Nonfood\"))));\n    }\n  }]);\n\n  return GrocInput;\n}(Component);\n\nGrocInput.defaultProps = {\n  onClose: function onClose() {},\n  onSave: function onSave() {}\n};\n\nvar GrocList =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(GrocList, _Component3);\n\n  function GrocList() {\n    _classCallCheck(this, GrocList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GrocList).apply(this, arguments));\n  }\n\n  _createClass(GrocList, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"list test:\" + this.props.upGrocs);\n      var onDelete = this.props.onDelete;\n      var grocs = this.props.grocs.map(function (r, index) {\n        return React.createElement(Groc, Object.assign({\n          key: r.id\n        }, r, {\n          onDelete: onDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, grocs);\n    }\n  }]);\n\n  return GrocList;\n}(Component);\n\nvar Groc =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(Groc, _Component4);\n\n  function Groc() {\n    _classCallCheck(this, Groc);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Groc).apply(this, arguments));\n  }\n\n  _createClass(Groc, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          id = _this$props.id,\n          section = _this$props.section,\n          onDelete = _this$props.onDelete; // const {value} = this.props.selectedOption;\n\n      console.log(this.props.selectedOption);\n      return React.createElement(\"li\", {\n        key: id,\n        className: \"list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-item__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"section-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, this.props.label), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"button x-button\",\n        onClick: function onClick() {\n          return onDelete(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"X\")))));\n    }\n  }]);\n\n  return Groc;\n}(Component);","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/List.js"],"names":["React","Component","createStore","Select","store","state","count","console","log","getState","ListApp","props","onSave","grocs","setState","prevState","newGroc","id","nextGrocId","onDelete","filter","r","title","section","ingredients","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","e","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","setItem","stringify","GrocInput","handleChange","target","name","handleChangeSec","selectedOption","getOptions","label","handleNewIngredient","handleChangeIng","index","Number","split","map","ing","i","handleSubmit","preventDefault","alignSelf","marginRight","updateInput","defaultProps","onClose","GrocList","upGrocs","Groc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createStore } from 'redux';\nimport Select from 'react-select';\n\n\nconst store = createStore((state={count:0}) =>{ return state; });\n\n\n\nconsole.log(store.getState());\n\nclass ListApp extends Component {\n    constructor(props) {\n      super(props);\n      //this.onSave = this.onSave.bind(this);\n      //this.onDelete = this.onDelete.bind(this);\n      this.state = {\n        grocs: [\n          {\n            id: 0,\n            title: \"Eggs\",\n            section: \"Refrigerated\",\n            ingredients: []\n          },\n          {\n            id: 1,\n            title: \"Bananas\",\n            section: \"Produce\",\n            ingredients: []\n          }\n        ],\n        nextGrocId: 2     \n      }\n    }\n    \n //LocalStorage:\n  componentDidMount() {\n    // for all items in state\n    for (let key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          let value = localStorage.getItem(key);\n  \n          // parse the localStorage string and setState\n          try {\n            value = JSON.parse(value);\n            this.setState({ [key]: value });\n          } catch (e) {\n            // handle empty string\n            this.setState({ [key]: value });\n          }\n        }\n      }\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n\n  }\n\n\n\n\n    onSave = (grocs) => {\n      this.setState((prevState) => {\n        const newGroc = {...grocs, id: this.state.nextGrocId};\n        return {\n          nextGrocId: prevState.nextGrocId + 1,\n          grocs: [...this.state.grocs, newGroc],\n         \n        }\n      });\n    }\n    \n    onDelete = (id) => {\n      const grocs = this.state.grocs.filter(r => r.id !== id);\n      this.setState({grocs});\n    }\n    \n    render() {\n      // console.log(this.props.upGrocs.length)\n      return (\n        \n        <div className=\"App\">\n\n         <div className=\"container\">\n          \n          \n          <h3>List groceries here:</h3>\n          <GrocInput onSave={this.onSave} /> \n          <GrocList onDelete={this.onDelete} \n              grocs={this.state.grocs} />\n          \n        </div></div>\n      );\n    }\n\n  }\n  \n  export default ListApp;\n\n\n\n\n\n\nclass GrocInput extends Component {\n    static defaultProps = {\n      onClose() {},\n      onSave() {}\n    }\n    \n    // state = {};\n    \n    handleChange = (e) => {\n      this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleChangeSec = (selectedOption) => {\n        //this.setState({[e.target.name]: e.target.value});\n        this.setState({selectedOption});\n        console.log(`Option picked: `, selectedOption.value)\n      }\n\n    getOptions =() => {\n      return [\n        { value: 'produce', label: 'Produce' },\n        { value: 'frozen', label: 'Frozen' },\n        { value: 'refrigerated', label: 'Refrigerated' }\n      ]\n    }\n    \n    handleNewIngredient = (e) => {\n      const {ingredients} = this.state;\n      this.setState({ingredients: [...ingredients, '']});\n    }\n    \n    handleChangeIng = (e) => {\n      const index = Number(e.target.name.split('-')[1]);\n      const ingredients = this.state.ingredients.map((ing, i) => (\n        i === index ? e.target.value : ing\n      ));\n      this.setState({ingredients});\n    }\n    \n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.onSave({...this.state});\n      this.setState({\n        title: '',\n        section: '',\n        ingredients: [''],\n      })\n    }\n    \n    render() {\n      const {title, selectedOption} = this.state;\n      //const {onClose} = this.props;\n      // let inputs = ingredients.map((ing, i) => (\n      //   <div\n      //     className=\"recipe-form-line\"\n      //     key={`ingredient-${i}`}\n      //   >\n      //     <label>{i+1}.\n      //       <input\n      //         type=\"text\"\n      //         name={`ingredient-${i}`}\n      //         value={ing}\n              \n      //         autoComplete=\"off\"\n      //         placeholder=\" Ingredient\"\n      //         onChange={this.handleChangeIng} />\n      //     </label>\n      //   </div>\n      // ));\n    //   let sectionOptions = section.map(section =>{\n    //     return <option key={section} value=\"section\">{section} </option> \n    //   }) \n      return (\n        <div className=\"recipe-form-container\">\n          <form className='recipe-form' onSubmit={this.handleSubmit}>\n\n            <div className='recipe-form-line'>\n              <label htmlFor='recipe-title-input'>item:</label>\n              <br />\n              <input\n                id='recipe-title-input'\n                key='title'\n                name='title'\n                type='text'\n                value={title}\n                autoComplete=\"off\"\n                onChange={this.handleChange}/>\n                <br />\n                <label htmlFor='recipe-title-input'> section:</label>\n                \n                <Select \n                  id='recipe-section-input'\n                  key='section'\n                  name='section'\n                  //value={section}\n                  autoComplete=\"off\"\n                  value={selectedOption}\n                  onChange={this.handleChangeSec}\n                  options={ this.getOptions() }\n                />\n            </div>\n\n\n            <button\n              type=\"submit\"\n              className=\"buttons\"\n              style={{alignSelf: 'flex-end', marginRight: 0}}\n            >\n              add item\n            </button>\n\n            <br />\n            Filter by: \n            <select \n            id=\"section-pick\" \n            name=\"section-pick\"\n            onChange={e=> this.updateInput(\"newSection\", e.target.value)}\n            >\n            <option value=\"\">Produce</option>\n            <option value=\"\">Refrigerated</option>\n            <option value=\"\">Frozen</option>\n            <option value=''>Pharma</option>\n            <option value='' checked >Other</option>\n            <option value=''>Nonfood</option>\n            </select>\n\n          \n\n          </form>\n        </div>\n      )\n    }\n  }\n  \n  \n\n  class GrocList extends Component {\n\n    \n    render() {\n      console.log(\"list test:\"+this.props.upGrocs)\n      const {onDelete} = this.props;\n      \n      const grocs = this.props.grocs.map((r,index) => (\n        <Groc key={r.id} {...r} onDelete={onDelete} />\n      \n      ));\n      \n      return (\n        <ul>\n        {grocs}\n         \n        </ul>\n      )\n    \n    }\n  }\n  \n  class Groc extends Component{\n    render(){\n        const {title, id, section, onDelete} = this.props;\n        // const {value} = this.props.selectedOption;\n        console.log(this.props.selectedOption)\n        return(<li key={id} className=\"list-item\">\n            <div className=\"list-item\">\n            <div className=\"list-item__container\">\n              <div>\n                {title}\n              </div>\n              <div>\n                <span className=\"section-display\">{this.props.label}</span>\n                <button type=\"button\"\n                className = \"button x-button\" \n                onClick={() => onDelete(id)}>          \n                X\n                </button>\n               </div>\n            </div>\n        </div></li>)\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}