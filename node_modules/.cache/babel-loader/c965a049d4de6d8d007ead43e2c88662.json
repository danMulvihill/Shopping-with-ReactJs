{"ast":null,"code":"import _defineProperty from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/groceries/GrocApp.js\";\nimport React, { Component } from 'react';\nimport { createStore } from 'redux';\nimport Select from 'react-select';\nimport GrocList from './GrocList.js';\nvar store = createStore(function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  return state;\n}); //have not yet fully implimented Redux. Still trying to figure it out.\n//this file has more than one component. need to refactor into separate files.\n\nconsole.log(store.getState());\n\nvar ListApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListApp, _Component);\n\n  function ListApp(props) {\n    var _this;\n\n    _classCallCheck(this, ListApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListApp).call(this, props)); //this.onSave = this.onSave.bind(this);\n    //this.onDelete = this.onDelete.bind(this);\n\n    _this.onSave = function (grocs) {\n      _this.setState(function (prevState) {\n        var newGroc = _objectSpread({}, grocs, {\n          id: _this.state.nextGrocId\n        });\n\n        return {\n          nextGrocId: prevState.nextGrocId + 1,\n          grocs: _toConsumableArray(_this.state.grocs).concat([newGroc])\n        };\n      });\n    };\n\n    _this.onDelete = function (id) {\n      var grocs = _this.state.grocs.filter(function (r) {\n        return r.id !== id;\n      });\n\n      _this.setState({\n        grocs: grocs\n      });\n    };\n\n    _this.state = {\n      grocs: [{\n        id: 0,\n        title: \"Eggs\",\n        section: \"Refrigerated\"\n      }, {\n        id: 1,\n        title: \"Bananas\",\n        section: \"Produce\"\n      }],\n      nextGrocId: 2\n    };\n    return _this;\n  } //LocalStorage:\n\n\n  _createClass(ListApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      } // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      // update react state\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.upGrocs.length)\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"List groceries here:\"), React.createElement(GrocInput, {\n        onSave: this.onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(GrocList, {\n        onDelete: this.onDelete,\n        grocs: this.state.grocs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ListApp;\n}(Component);\n\nexport default ListApp;\n\nvar GrocInput =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(GrocInput, _Component2);\n\n  function GrocInput() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, GrocInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GrocInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      title: \"\"\n    };\n\n    _this2.handleChange = function (e) {\n      _this2.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this2.handleChangeSec = function (selectedOption) {\n      //this.setState({[e.target.name]: e.target.value});\n      _this2.setState({\n        selectedOption: selectedOption.label\n      });\n\n      console.log(\"Option picked: \", selectedOption.value);\n    };\n\n    _this2.getOptions = function () {\n      return [{\n        value: 'produce',\n        label: 'Produce'\n      }, {\n        value: 'frozen',\n        label: 'Frozen'\n      }, {\n        value: 'refrigerated',\n        label: 'Refrigerated'\n      }, {\n        value: 'otherFood',\n        label: \"Other Food\"\n      }, {\n        value: 'drugs',\n        label: \"Drugs\"\n      }, {\n        value: 'notFood',\n        label: \"Other/Not Food\"\n      }];\n    };\n\n    _this2.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this2.props.onSave(_objectSpread({}, _this2.state));\n\n      _this2.setState({\n        title: '',\n        section: ''\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(GrocInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          title = _this$state.title,\n          selectedOption = _this$state.selectedOption;\n      return React.createElement(\"div\", {\n        className: \"recipe-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"recipe-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"item:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-title-input\",\n        key: \"title\",\n        name: \"title\",\n        type: \"text\",\n        value: title,\n        autoComplete: \"off\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \" section:\"), React.createElement(Select, {\n        id: \"recipe-section-input\",\n        key: \"section\",\n        name: \"section\",\n        autoComplete: \"on\" //value={selectedOption}\n        ,\n        onChange: this.handleChangeSec,\n        options: this.getOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"buttons\",\n        style: {\n          alignSelf: 'flex-end',\n          marginRight: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"add item\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), \"Filter by:\", React.createElement(\"select\", {\n        id: \"section-pick\",\n        name: \"section-pick\" //onChange={e=> this.updateInput(\"newSection\", e.target.value)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Produce\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Refrigerated\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Frozen\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Pharma\"), React.createElement(\"option\", {\n        value: \"\",\n        checked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Other\"), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Nonfood\"))));\n    }\n  }]);\n\n  return GrocInput;\n}(Component);\n\nGrocInput.defaultProps = {\n  onClose: function onClose() {},\n  onSave: function onSave() {}\n};","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/groceries/GrocApp.js"],"names":["React","Component","createStore","Select","GrocList","store","state","count","console","log","getState","ListApp","props","onSave","grocs","setState","prevState","newGroc","id","nextGrocId","onDelete","filter","r","title","section","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","e","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","setItem","stringify","GrocInput","handleChange","target","name","handleChangeSec","selectedOption","label","getOptions","handleSubmit","preventDefault","alignSelf","marginRight","defaultProps","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createStore } from 'redux';\nimport Select from 'react-select';\nimport GrocList from './GrocList.js'\n\n\nconst store = createStore((state={count:0}) =>{ return state; });\n//have not yet fully implimented Redux. Still trying to figure it out.\n\n//this file has more than one component. need to refactor into separate files.\n\n\nconsole.log(store.getState());\n\nclass ListApp extends Component {\n    constructor(props) {\n      super(props);\n      //this.onSave = this.onSave.bind(this);\n      //this.onDelete = this.onDelete.bind(this);\n      this.state = {\n        grocs: [\n          {\n            id: 0,\n            title: \"Eggs\",\n            section: \"Refrigerated\"\n          },\n          {\n            id: 1,\n            title: \"Bananas\",\n            section: \"Produce\"\n          }\n        ],\n        nextGrocId: 2     \n      }\n    }\n    \n //LocalStorage:\n  componentDidMount() {\n    // for all items in state\n    for (let key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          let value = localStorage.getItem(key);\n  \n          // parse the localStorage string and setState\n          try {\n            value = JSON.parse(value);\n            this.setState({ [key]: value });\n          } catch (e) {\n            // handle empty string\n            this.setState({ [key]: value });\n          }\n        }\n      }\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n\n  }\n\n\n\n\n    onSave = (grocs) => {\n      this.setState((prevState) => {\n        const newGroc = {...grocs, id: this.state.nextGrocId};\n        return {\n          nextGrocId: prevState.nextGrocId + 1,\n          grocs: [...this.state.grocs, newGroc],\n         \n        }\n      });\n    }\n    \n    onDelete = (id) => {\n      const grocs = this.state.grocs.filter(r => r.id !== id);\n      this.setState({grocs});\n    }\n    \n    render() {\n      // console.log(this.props.upGrocs.length)\n      return (\n        \n        <div className=\"App\">\n\n         <div className=\"container\">\n          \n          \n          <h3>List groceries here:</h3>\n          <GrocInput onSave={this.onSave} /> \n          <GrocList onDelete={this.onDelete} \n              grocs={this.state.grocs} />\n          \n        </div></div>\n      );\n    }\n\n  }\n  \n  export default ListApp;\n\n\n\n\n\n\nclass GrocInput extends Component {\n    static defaultProps = {\n      onClose() {},\n      onSave() {}\n    }\n    \n    state = {\n      title: \"\"\n    };\n    \n    handleChange = (e) => {\n      this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleChangeSec = (selectedOption) => {\n        //this.setState({[e.target.name]: e.target.value});\n        this.setState({selectedOption: selectedOption.label});\n        console.log(`Option picked: `, selectedOption.value)\n        \n      }\n\n    getOptions =() => {\n      return [\n        { value: 'produce', label: 'Produce' },\n        { value: 'frozen', label: 'Frozen' },\n        { value: 'refrigerated', label: 'Refrigerated' },\n        { value: 'otherFood', label: \"Other Food\"},\n        { value: 'drugs', label: \"Drugs\"},\n        { value: 'notFood', label: \"Other/Not Food\"}\n\n      ]\n    }\n    \n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.onSave({...this.state});\n      this.setState({\n        title: '',\n        section: ''\n      })\n    }\n    \n    render() {\n      const {title, selectedOption} = this.state;\n\n      return (\n        <div className=\"recipe-form-container\">\n          <form className='recipe-form' onSubmit={this.handleSubmit}>\n\n            <div className='recipe-form-line'>\n              <label htmlFor='recipe-title-input'>item:</label>\n              <br />\n              <input\n                id='recipe-title-input'\n                key='title'\n                name='title'\n                type='text'\n                value={title}\n                autoComplete=\"off\"\n                onChange={this.handleChange}/>\n              </div>\n              <div className='recipe-form-line'>\n                <label htmlFor='recipe-title-input'> section:</label>\n                \n                <Select \n                  id='recipe-section-input'\n                  key='section'\n                  name='section'\n                  autoComplete=\"on\"\n                  //value={selectedOption}\n                  onChange={this.handleChangeSec}\n                  options={ this.getOptions() }\n                />\n            </div>\n\n\n            <button\n              type=\"submit\"\n              className=\"buttons\"\n              style={{alignSelf: 'flex-end', marginRight: 0}}\n            >\n              add item\n            </button>\n\n            <br />\n            Filter by: \n            <select \n            id=\"section-pick\" \n            name=\"section-pick\"\n            //onChange={e=> this.updateInput(\"newSection\", e.target.value)}\n            >\n            <option value=\"\">Produce</option>\n            <option value=\"\">Refrigerated</option>\n            <option value=\"\">Frozen</option>\n            <option value=''>Pharma</option>\n            <option value='' checked >Other</option>\n            <option value=''>Nonfood</option>\n            </select>\n\n          \n\n          </form>\n        </div>\n      )\n    }\n  }\n  \n  "]},"metadata":{},"sourceType":"module"}