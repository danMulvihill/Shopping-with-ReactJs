{"ast":null,"code":"import _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/groceries/GrocApp.js\";\nimport React, { Component } from 'react';\nimport { createStore } from 'redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GrocList from './GrocList.js';\nimport GrocInput from './GrocInput';\nimport uuid from 'uuid';\nvar store = createStore(function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  return state;\n}); //have not yet fully implimented Redux. Still trying to figure it out.\n//this file has more than one component. need to refactor into separate files.\n\nconsole.log(store.getState());\n\nvar ListApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListApp, _Component);\n\n  function ListApp(props) {\n    var _this;\n\n    _classCallCheck(this, ListApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListApp).call(this, props)); //this.onSave = this.onSave.bind(this);\n    //this.onDelete = this.onDelete.bind(this);\n\n    _this.changeSection = function (newSection) {\n      //console.log(\"New Section: \"+newSection)\n      _this.setState({\n        filterChoice: newSection\n      }); //       //console.log(\"Filter Choice: \"+this.state.filterChoice)\n      //       // const grocs = this.state.grocs.filter(groc => groc.selectedOption === newSection);\n      //       //   this.setState({grocs});\n\n    };\n\n    _this.state = {\n      filterChoice: 'All'\n    };\n    return _this;\n  } //  //LocalStorage:\n  //   componentDidMount() {\n  //     // for all items in state\n  //     for (let key in this.state) {\n  //         // if the key exists in localStorage\n  //         if (localStorage.hasOwnProperty(key)) {\n  //           // get the key's value from localStorage\n  //           let value = localStorage.getItem(key);\n  //           // parse the localStorage string and setState\n  //           try {\n  //             value = JSON.parse(value);\n  //             this.setState({ [key]: value });\n  //           } catch (e) {\n  //             // handle empty string\n  //             this.setState({ [key]: value });\n  //           }\n  //         }\n  //       }\n  //     // add event listener to save state to localStorage\n  //     // when user leaves/refreshes the page\n  //     window.addEventListener(\n  //       \"beforeunload\",\n  //       this.saveStateToLocalStorage.bind(this)\n  //     );\n  //   }\n  //   componentWillUnmount() {\n  //     window.removeEventListener(\n  //       \"beforeunload\",\n  //       this.saveStateToLocalStorage.bind(this)\n  //     );\n  //     // saves if component has a chance to unmount\n  //     this.saveStateToLocalStorage();\n  //   }\n  //   saveStateToLocalStorage() {\n  //     // for every item in React state\n  //     for (let key in this.state) {\n  //       // save to localStorage\n  //       localStorage.setItem(key, JSON.stringify(this.state[key]));\n  //     }\n  //   }\n  //   updateInput(key, value) {\n  //     // update react state\n  //     this.setState({ [key]: value });\n  //   }\n  //     onSave = (grocs) => {\n  //       this.setState((prevState) => {\n  //         const newGroc = {...grocs, id: this.state.nextGrocId};\n  //         return {\n  //           nextGrocId: prevState.nextGrocId + 1,\n  //           grocs: [...this.state.grocs, newGroc],\n  //           filterChoice: \"All\"\n  //         }\n  //       });\n  //     }\n  //     onDelete = (id) => {\n  //       const grocs = this.state.grocs.filter(groc => groc.id !== id);\n  //       this.setState({grocs});\n  //     }\n  //     handleChangeFilt = (e) => {\n  //       console.log(e.target.value)\n  //       //this.props.onChange(e.target.value);\n  //     }\n\n\n  _createClass(ListApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.props.upGrocs.length)\n      return React.createElement(\"div\", {\n        className: \"grocApp container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"List groceries here:\"), React.createElement(GrocInput, {\n        onSave: this.onSave,\n        changeSection: this.changeSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          background: \"brown\",\n          color: \"white\",\n          textAlign: \"center\",\n          padding: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.props.grocs.length, \" items on list\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Filter by: \", React.createElement(\"select\", {\n        id: \"filtered-sections\",\n        onChange: function onChange(e) {\n          return _this2.changeSection(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"All\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"option\", {\n        value: \"Produce\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Produce\"), React.createElement(\"option\", {\n        value: \"Refrigerated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Refrigerated\"), React.createElement(\"option\", {\n        value: \"Frozen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Frozen\"), React.createElement(\"option\", {\n        value: \"Center Isle Food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Center Isle Food\"), React.createElement(\"option\", {\n        value: \"Other Food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Other Food\"), React.createElement(\"option\", {\n        value: \"Household items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Household Items\"), React.createElement(\"option\", {\n        value: \"Drugs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Drugs\"), React.createElement(\"option\", {\n        value: \"Bath/Hygiene\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Bath/Hygiene\"), React.createElement(\"option\", {\n        value: \"Other/Not Food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Other/Not Food\"))), React.createElement(GrocList, {\n        onSave: this.props.onSave,\n        onDelete: this.props.onDelete,\n        grocs: this.props.grocs,\n        filterChoice: this.state.filterChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ListApp;\n}(Component);\n\nexport default ListApp;","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/groceries/GrocApp.js"],"names":["React","Component","createStore","GrocList","GrocInput","uuid","store","state","count","console","log","getState","ListApp","props","changeSection","newSection","setState","filterChoice","onSave","background","color","textAlign","padding","grocs","length","margin","e","target","value","onDelete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createStore } from 'redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GrocList from './GrocList.js'\nimport GrocInput from './GrocInput'\nimport uuid from 'uuid';\n\n\nconst store = createStore((state={count:0}) =>{ return state; });\n//have not yet fully implimented Redux. Still trying to figure it out.\n\n//this file has more than one component. need to refactor into separate files.\n\n\nconsole.log(store.getState());\n\nclass ListApp extends Component {\n    constructor(props) {\n      super(props);\n      //this.onSave = this.onSave.bind(this);\n      //this.onDelete = this.onDelete.bind(this);\n      this.state = {\n        filterChoice: 'All'     \n      }\n    }\n    \n//  //LocalStorage:\n//   componentDidMount() {\n//     // for all items in state\n//     for (let key in this.state) {\n//         // if the key exists in localStorage\n//         if (localStorage.hasOwnProperty(key)) {\n//           // get the key's value from localStorage\n//           let value = localStorage.getItem(key);\n  \n//           // parse the localStorage string and setState\n//           try {\n//             value = JSON.parse(value);\n//             this.setState({ [key]: value });\n//           } catch (e) {\n//             // handle empty string\n//             this.setState({ [key]: value });\n//           }\n//         }\n//       }\n\n//     // add event listener to save state to localStorage\n//     // when user leaves/refreshes the page\n//     window.addEventListener(\n//       \"beforeunload\",\n//       this.saveStateToLocalStorage.bind(this)\n//     );\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener(\n//       \"beforeunload\",\n//       this.saveStateToLocalStorage.bind(this)\n//     );\n\n//     // saves if component has a chance to unmount\n//     this.saveStateToLocalStorage();\n//   }\n\n\n//   saveStateToLocalStorage() {\n//     // for every item in React state\n//     for (let key in this.state) {\n//       // save to localStorage\n//       localStorage.setItem(key, JSON.stringify(this.state[key]));\n//     }\n//   }\n\n//   updateInput(key, value) {\n//     // update react state\n//     this.setState({ [key]: value });\n\n//   }\n\n\n//     onSave = (grocs) => {\n//       this.setState((prevState) => {\n//         const newGroc = {...grocs, id: this.state.nextGrocId};\n//         return {\n//           nextGrocId: prevState.nextGrocId + 1,\n//           grocs: [...this.state.grocs, newGroc],\n//           filterChoice: \"All\"\n//         }\n//       });\n//     }\n    \n//     onDelete = (id) => {\n//       const grocs = this.state.grocs.filter(groc => groc.id !== id);\n//       this.setState({grocs});\n//     }\n\n\n//     handleChangeFilt = (e) => {\n//       console.log(e.target.value)\n//       //this.props.onChange(e.target.value);\n//     }\n\n    changeSection = (newSection) => {\n      //console.log(\"New Section: \"+newSection)\n      this.setState({\n        filterChoice: newSection\n      });\n//       //console.log(\"Filter Choice: \"+this.state.filterChoice)\n//       // const grocs = this.state.grocs.filter(groc => groc.selectedOption === newSection);\n//       //   this.setState({grocs});\n      \n  }\n    \n    \n    render() {\n      // console.log(this.props.upGrocs.length)\n      return ( \n        <div className=\"grocApp container-fluid\">\n            <div className=\"row justify-content-between\">\n                <div className=\"col-sm-4\">\n                    <h3>List groceries here:</h3>\n                    <GrocInput onSave={this.onSave} changeSection={this.changeSection} /> \n                    <div style={{background: \"brown\", color: \"white\", textAlign: \"center\", padding: \"5px\"}}>{this.props.grocs.length} items on list</div>\n                </div>\n                <div className=\"col-sm-8\">\n                  <h3 style={{margin: \"15px\"}}>Filter by: <select id=\"filtered-sections\" \n                    onChange={e=>this.changeSection(e.target.value)}>\n                    <option value=\"All\">All</option>\n                    <option value=\"Produce\">Produce</option>\n                    <option value=\"Refrigerated\">Refrigerated</option>\n                    <option value=\"Frozen\">Frozen</option>\n                    <option value=\"Center Isle Food\">Center Isle Food</option>\n                    <option value=\"Other Food\">Other Food</option>\n                    <option value=\"Household items\">Household Items</option>\n                    <option value=\"Drugs\">Drugs</option>\n                    <option value='Bath/Hygiene'>Bath/Hygiene</option>\n                    <option value=\"Other/Not Food\">Other/Not Food</option>\n                    </select>\n                  </h3>\n                    <GrocList \n                      onSave={this.props.onSave}\n                      onDelete={this.props.onDelete} \n                      grocs={this.props.grocs} \n                      filterChoice={this.state.filterChoice} \n                    />\n                  </div>\n              </div>\n        </div>\n      );\n    }\n\n  }\n  \n  export default ListApp;\n\n\n"]},"metadata":{},"sourceType":"module"}