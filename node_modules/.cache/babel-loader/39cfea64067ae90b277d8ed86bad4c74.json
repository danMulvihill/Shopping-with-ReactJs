{"ast":null,"code":"import _toConsumableArray from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/List2.js\";\nimport React, { Component } from \"react\";\nimport './RecipeApp.css';\n\nvar List2App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List2App, _Component);\n\n  function List2App(props) {\n    var _this;\n\n    _classCallCheck(this, List2App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List2App).call(this, props));\n    _this.state = {\n      list: [{\n        id: 0,\n        ingredient: 'Eggs',\n        section: 'Refrigerated'\n      }],\n      newItem: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(List2App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      } // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      // update react state\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem() {\n      // create a new item\n      console.log(\" mount value:\" + this.state.newItem);\n      var newItem = {\n        id: 1 + Math.random(),\n        value: this.state.newItem.slice()\n      };\n      console.log(\" mount value:\" + this.state.newItem); // copy current list of items\n\n      var list = _toConsumableArray(this.state.list); // add the new item to the list\n\n\n      list.push(newItem); // update state with new list, reset the new item input\n\n      this.setState({\n        list: list,\n        newItem: \"\"\n      });\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem(id) {\n      // copy current list of items\n      var list = _toConsumableArray(this.state.list); // filter out the item being deleted\n\n\n      var updatedList = list.filter(function (item) {\n        return item.id !== id;\n      });\n      this.setState({\n        list: updatedList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Add Groceries Here\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"enter intems here\",\n        value: this.state.newItem,\n        onChange: function onChange(e) {\n          return _this2.updateInput(\"newItem\", e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"section-pick\",\n        name: \"section-pick\",\n        onChange: function onChange(e) {\n          return _this2.updateInput(\"newSection\", e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: this.state.newSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Produce\"), React.createElement(\"option\", {\n        value: this.state.newSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Refrigerated\"), React.createElement(\"option\", {\n        value: this.state.newSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Frozen\"), React.createElement(\"option\", {\n        value: this.state.newSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Pharma\"), React.createElement(\"option\", {\n        value: this.state.newSection,\n        checked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Other\"), React.createElement(\"option\", {\n        value: this.state.newSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Nonfood\")), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.addItem();\n        } //disabled={!this.state.newItem.length}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"+ Add\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.state.list.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          className: \"list-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-item__container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, item.value, React.createElement(\"button\", {\n          className: \"button x-button\",\n          onClick: function onClick() {\n            return _this2.deleteItem(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"X\")));\n      }))));\n    }\n  }]);\n\n  return List2App;\n}(Component);\n\nexport default List2App;","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/List2.js"],"names":["React","Component","List2App","props","state","list","id","ingredient","section","newItem","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","setItem","stringify","console","log","Math","random","slice","push","updatedList","filter","item","updateInput","target","newSection","addItem","map","deleteItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './RecipeApp.css'\n\nclass List2App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n          { \n            id: 0,\n            ingredient: 'Eggs',\n            section: 'Refrigerated'\n          },\n      ],\n      newItem: \"\"\n    };\n  }\n\n\n  componentDidMount() {\n    // for all items in state\n    for (let key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          let value = localStorage.getItem(key);\n  \n          // parse the localStorage string and setState\n          try {\n            value = JSON.parse(value);\n            this.setState({ [key]: value });\n            \n          } catch (e) {\n            // handle empty string\n            this.setState({ [key]: value });\n          }\n        }\n      }\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n\n  }\n\n\n  addItem() {\n    // create a new item\n    console.log(\" mount value:\"+ this.state.newItem)\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n    console.log(\" mount value:\"+ this.state.newItem)\n\n    // copy current list of items\n    const list = [...this.state.list];\n\n    // add the new item to the list\n    list.push(newItem);\n\n    // update state with new list, reset the new item input\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list];\n    // filter out the item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n       \n          <hr />\n        \n        <div className=\"container\">\n          <h3>Add Groceries Here</h3>\n          <br />\n          <input\n            type=\"text\"\n            placeholder=\"enter intems here\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n\n          <select id=\"section-pick\" name=\"section-pick\"\n          onChange={e=> this.updateInput(\"newSection\", e.target.value)}\n          >\n            <option value={this.state.newSection}>Produce</option>\n            <option value={this.state.newSection}>Refrigerated</option>\n            <option value={this.state.newSection}>Frozen</option>\n            <option value={this.state.newSection}>Pharma</option>\n            <option value={this.state.newSection} checked >Other</option>\n            <option value={this.state.newSection}>Nonfood</option>\n          </select>\n          <button\n            onClick={() => this.addItem()}\n            //disabled={!this.state.newItem.length}\n          >\n            &#43; Add\n          </button>\n          <br /> <br />\n          <ul>\n            {this.state.list.map(item => {\n              return (\n                <li key={item.id} className=\"list-item\">\n                <div className=\"list-item__container\">\n                   {item.value}\n                  <button \n                    className = \"button x-button\"   \n                    onClick={() => this.deleteItem(item.id)}>\n                    X\n                  </button>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default List2App;"]},"metadata":{},"sourceType":"module"}