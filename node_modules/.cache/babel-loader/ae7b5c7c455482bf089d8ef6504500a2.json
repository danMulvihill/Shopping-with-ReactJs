{"ast":null,"code":"var _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //import 'bootstrap/dist/css/bootstrap.css'\n\nimport './styles/index.css'; //import App from './App';\n\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport RecipeApp from \"./RecipeApp\";\nimport List from \"./List\";\nimport About from \"./About\";\nimport * as serviceWorker from './serviceWorker';\n\nvar NotFoundPage = function NotFoundPage() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containter intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Welcome to Shopping Buddy. \"), React.createElement(\"img\", {\n    src: \"shop.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"An app for collecting and organizing your favorite recipes and pushing them to a sortable shopping list.\")));\n};\n\nvar routes = React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(Navbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/about\",\n  component: About,\n  exact: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/recipes\",\n  component: RecipeApp,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/groceries\",\n  component: List,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/list\",\n  component: List,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(Route, {\n  component: NotFoundPage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}))));\nReactDOM.render(routes, document.querySelector('#root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); // class App extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         recipes: [],\n//         nextRecipeId: 3     \n//       }\n//     }\n//   componentWillMount(){\n//     this.setState({recipes: [\n//       {\n//         id: 0,\n//         title: \"Spaghetti\",\n//         ingredients: [ \"pasta\", \"tomato sauce\"]\n//       },\n//       {\n//         id: 1,\n//         title: \"PB&J Sandwiches\",\n//         ingredients: [\"Bread\", \"Peanut Butter\", \"Jelly\"]\n//       },{\n//         id: 2,\n//         title: \"Chocolate-chip Cookies\",\n//         ingredients: [\"Sugar\", \"Butter\", \"Eggs\", \"Flour\"]\n//       }\n//     ]})\n//   }\n//   //LocalStorage:\n//   componentDidMount() {\n//     // for all items in state\n//     for (let key in this.state) {\n//         // if the key exists in localStorage\n//         if (localStorage.hasOwnProperty(key)) {\n//           // get the key's value from localStorage\n//           let value = localStorage.getItem(key);\n//           // parse the localStorage string and setState\n//           try {\n//             value = JSON.parse(value);\n//             this.setState({ [key]: value });\n//           } catch (e) {\n//             // handle empty string\n//             this.setState({ [key]: value });\n//           }\n//         }\n//       }\n//     // add event listener to save state to localStorage\n//     // when user leaves/refreshes the page\n//     window.addEventListener(\n//       \"beforeunload\",\n//       this.saveStateToLocalStorage.bind(this)\n//     );\n//   }\n//   componentWillUnmount() {\n//     window.removeEventListener(\n//       \"beforeunload\",\n//       this.saveStateToLocalStorage.bind(this)\n//     );\n//     // saves if component has a chance to unmount\n//     this.saveStateToLocalStorage();\n//   }\n//   saveStateToLocalStorage() {\n//     // for every item in React state\n//     for (let key in this.state) {\n//       // save to localStorage\n//       localStorage.setItem(key, JSON.stringify(this.state[key]));\n//     }\n//   }\n//   updateInput(key, value) {\n//     // update react state\n//     this.setState({ [key]: value });\n//   }\n//     render() {\n//       return (\n//         <div id=\"app\">\n//         <div id=\"recipes\"><RecipeApp upRecipes=\"this.state.recipes\" /></div>\n//         <div id=\"grocs\"><List2App /></div>\n//         </div>\n//       )\n//     }\n//   }\n//   export default App","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Route","Switch","Link","Navbar","RecipeApp","List","About","serviceWorker","NotFoundPage","routes","render","document","querySelector","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,oBAAP,C,CACA;;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAiD,kBAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SACjB;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI;AAAK,IAAA,GAAG,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAHJ,CADJ,CADiB;AAAA,CAArB;;AAYA,IAAMC,MAAM,GACR,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,SAAS,EAAEH,KAAhC;AAAwC,EAAA,KAAK,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,EAEG,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,SAAS,EAAEF,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFH,EAGG,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,YAAZ;AAAyB,EAAA,SAAS,EAAEC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHH,EAIG,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,SAAS,EAAEA,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJH,EAKG,oBAAC,KAAD;AAAO,EAAA,SAAS,EAAEG,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALH,CAHD,CADA,CADJ;AAkBAV,QAAQ,CAACY,MAAT,CAAgBD,MAAhB,EAAwBE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAxB,E,CAGA;AACA;AACA;;AACAL,aAAa,CAACM,UAAd,G,CAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//import 'bootstrap/dist/css/bootstrap.css'\nimport './styles/index.css';\n//import App from './App';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport Navbar from \"./Navbar\"\nimport RecipeApp from \"./RecipeApp\";\n\nimport List from \"./List\";\nimport About from \"./About\";\nimport * as serviceWorker from './serviceWorker';\n\nconst NotFoundPage = () =>(\n    <div className=\"App\">\n        <div className=\"containter intro\"> \n            <h1>Welcome to Shopping Buddy. </h1>\n            <img src=\"shop.jpg\" />\n            <p>An app for collecting and organizing your favorite recipes\n            and pushing them to a sortable shopping list.</p>\n        </div>\n    </div>\n)\n\n\nconst routes = (\n    <BrowserRouter>\n    <div>\n     <Navbar />\n     <hr />\n     <Switch>\n        <Route path=\"/about\" component={About}  exact={true}/>\n        <Route path=\"/recipes\" component={RecipeApp} />\n        <Route path=\"/groceries\" component={List} />\n        <Route path=\"/list\" component={List} />\n        <Route component={NotFoundPage} />\n      </Switch>\n      </div>\n    </BrowserRouter>\n)\n\n\n\nReactDOM.render(routes, document.querySelector('#root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n// class App extends React.Component {\n  \n//     constructor(props) {\n//       super(props);\n  \n//       this.state = {\n//         recipes: [],\n//         nextRecipeId: 3     \n//       }\n//     }\n    \n  \n//   componentWillMount(){\n//     this.setState({recipes: [\n//       {\n//         id: 0,\n//         title: \"Spaghetti\",\n//         ingredients: [ \"pasta\", \"tomato sauce\"]\n//       },\n//       {\n//         id: 1,\n//         title: \"PB&J Sandwiches\",\n//         ingredients: [\"Bread\", \"Peanut Butter\", \"Jelly\"]\n//       },{\n//         id: 2,\n//         title: \"Chocolate-chip Cookies\",\n//         ingredients: [\"Sugar\", \"Butter\", \"Eggs\", \"Flour\"]\n//       }\n//     ]})\n//   }\n  \n  \n//   //LocalStorage:\n//   componentDidMount() {\n//     // for all items in state\n//     for (let key in this.state) {\n//         // if the key exists in localStorage\n//         if (localStorage.hasOwnProperty(key)) {\n//           // get the key's value from localStorage\n//           let value = localStorage.getItem(key);\n  \n//           // parse the localStorage string and setState\n//           try {\n//             value = JSON.parse(value);\n//             this.setState({ [key]: value });\n//           } catch (e) {\n//             // handle empty string\n//             this.setState({ [key]: value });\n//           }\n//         }\n//       }\n  \n//     // add event listener to save state to localStorage\n//     // when user leaves/refreshes the page\n//     window.addEventListener(\n//       \"beforeunload\",\n//       this.saveStateToLocalStorage.bind(this)\n//     );\n//   }\n  \n//   componentWillUnmount() {\n//     window.removeEventListener(\n//       \"beforeunload\",\n//       this.saveStateToLocalStorage.bind(this)\n//     );\n  \n//     // saves if component has a chance to unmount\n//     this.saveStateToLocalStorage();\n//   }\n  \n  \n//   saveStateToLocalStorage() {\n//     // for every item in React state\n//     for (let key in this.state) {\n//       // save to localStorage\n//       localStorage.setItem(key, JSON.stringify(this.state[key]));\n//     }\n//   }\n  \n//   updateInput(key, value) {\n//     // update react state\n//     this.setState({ [key]: value });\n  \n//   }\n  \n  \n    \n//     render() {\n//       return (\n//         <div id=\"app\">\n       \n//         <div id=\"recipes\"><RecipeApp upRecipes=\"this.state.recipes\" /></div>\n//         <div id=\"grocs\"><List2App /></div>\n          \n          \n//         </div>\n//       )\n//     }\n//   }\n  \n//   export default App\n  \n  \n  \n\n\n"]},"metadata":{},"sourceType":"module"}