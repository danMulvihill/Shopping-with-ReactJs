{"ast":null,"code":"import _toConsumableArray from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dan/react-sites/shoppingApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/List.js\";\nimport React, { Component } from 'react';\n\nvar ListApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListApp, _Component);\n\n  function ListApp(props) {\n    var _this;\n\n    _classCallCheck(this, ListApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListApp).call(this, props));\n    _this.onSave = _this.onSave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      grocs: [{\n        id: 0,\n        title: \"Eggs\",\n        section: \"Refrigerated\",\n        ingredients: []\n      }, {\n        id: 1,\n        title: \"Bananas\",\n        section: \"Produce\",\n        ingredients: []\n      }],\n      nextGrocId: 2\n    };\n    return _this;\n  } //LocalStorage:\n\n\n  _createClass(ListApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      } // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      // update react state\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"onSave\",\n    value: function onSave(grocs) {\n      var _this2 = this;\n\n      this.setState(function (prevState) {\n        var newGroc = _objectSpread({}, grocs, {\n          id: _this2.state.nextGrocId\n        });\n\n        return {\n          nextGrocId: prevState.nextGrocId + 1,\n          grocs: _toConsumableArray(_this2.state.grocs).concat([newGroc])\n        };\n      });\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(id) {\n      var grocs = this.state.grocs.filter(function (r) {\n        return r.id !== id;\n      });\n      this.setState({\n        grocs: grocs\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.upGrocs.length)\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"List groceries here:\"), React.createElement(GrocInput, {\n        onSave: this.onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(GrocList, {\n        onDelete: this.onDelete,\n        grocs: this.state.grocs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ListApp;\n}(Component);\n\nexport default ListApp;\n\nvar Groc =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Groc, _Component2);\n\n  function Groc() {\n    _classCallCheck(this, Groc);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Groc).apply(this, arguments));\n  }\n\n  _createClass(Groc, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          id = _this$props.id,\n          section = _this$props.section,\n          onDelete = _this$props.onDelete;\n      return React.createElement(\"li\", {\n        key: id,\n        className: \"list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-item__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"section-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, section), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"button x-button\",\n        onClick: function onClick() {\n          return onDelete(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"X\")))));\n    }\n  }]);\n\n  return Groc;\n}(Component);\n\nvar GrocInput =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(GrocInput, _Component3);\n\n  function GrocInput(props) {\n    var _this3;\n\n    _classCallCheck(this, GrocInput);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(GrocInput).call(this, props));\n    _this3.state = {\n      title: '',\n      section: '',\n      ingredients: ['']\n    };\n    _this3.handleChange = _this3.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleNewIngredient = _this3.handleNewIngredient.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleChangeIng = _this3.handleChangeIng.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleChangeSec = _this3.handleChangeSec.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(GrocInput, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleChangeSec\",\n    value: function handleChangeSec(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleNewIngredient\",\n    value: function handleNewIngredient(e) {\n      var ingredients = this.state.ingredients;\n      this.setState({\n        ingredients: _toConsumableArray(ingredients).concat([''])\n      });\n    }\n  }, {\n    key: \"handleChangeIng\",\n    value: function handleChangeIng(e) {\n      var index = Number(e.target.name.split('-')[1]);\n      var ingredients = this.state.ingredients.map(function (ing, i) {\n        return i === index ? e.target.value : ing;\n      });\n      this.setState({\n        ingredients: ingredients\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.props.onSave(_objectSpread({}, this.state));\n      this.setState({\n        title: '',\n        section: '',\n        ingredients: ['']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          title = _this$state.title,\n          ingredients = _this$state.ingredients,\n          section = _this$state.section; //const {onClose} = this.props;\n\n      var inputs = ingredients.map(function (ing, i) {\n        return React.createElement(\"div\", {\n          className: \"recipe-form-line\",\n          key: \"ingredient-\".concat(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, i + 1, \".\", React.createElement(\"input\", {\n          type: \"text\",\n          name: \"ingredient-\".concat(i),\n          value: ing,\n          autoComplete: \"off\",\n          placeholder: \" Ingredient\",\n          onChange: _this4.handleChangeIng,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        })));\n      });\n      var sectionOptions = section.map(function (section) {\n        return React.createElement(\"option\", {\n          key: section,\n          value: \"section\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, section, \" \");\n      });\n      return React.createElement(\"div\", {\n        className: \"recipe-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"recipe-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"item:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-title-input\",\n        key: \"title\",\n        name: \"title\",\n        type: \"text\",\n        value: title,\n        autoComplete: \"off\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \" section:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-section-input\",\n        key: \"section\",\n        name: \"section\",\n        type: \"text\" //value={section}\n        ,\n        autoComplete: \"off\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"buttons\",\n        style: {\n          alignSelf: 'flex-end',\n          marginRight: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"add item\"), React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"onChange=\", function (e) {\n        return _this4.updateInput(\"newSection\", e.target.value);\n      }, sectionOptions)));\n    }\n  }]);\n\n  return GrocInput;\n}(Component);\n\nGrocInput.defaultProps = {\n  onClose: function onClose() {},\n  onSave: function onSave() {}\n};\n\nvar GrocList =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(GrocList, _Component4);\n\n  function GrocList() {\n    _classCallCheck(this, GrocList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GrocList).apply(this, arguments));\n  }\n\n  _createClass(GrocList, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"list test:\" + this.props.upGrocs);\n      var onDelete = this.props.onDelete;\n      var grocs = this.props.grocs.map(function (r, index) {\n        return React.createElement(Groc, Object.assign({\n          key: r.id\n        }, r, {\n          onDelete: onDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, grocs);\n    }\n  }]);\n\n  return GrocList;\n}(Component); // export default class List extends Component {\n//     static defaultProps = {\n//         sections: [\"Produce\", \"Refrigerated\", \"Frozen\", \"Pharma\", \"Other Food\", \"Other items (not food)\"]\n//       };\n//       constructor(props) {\n//         super(props);\n//         this.state = {\n//           list: [\n//               { \n//                 id: 0,\n//                 ingredient: 'Eggs',\n//                 quantity: 1,\n//                 section: 'Refrigerated'\n//               },\n//           ],\n//           newItem: \"\",\n//           newQuantity: 1,\n//           newSection: ''\n//         };\n//       }\n//       componentDidMount() {\n//         // for all items in state\n//         for (let key in this.state) {\n//             // if the key exists in localStorage\n//             if (localStorage.hasOwnProperty(key)) {\n//               // get the key's value from localStorage\n//               let value = localStorage.getItem(key);\n//               // parse the localStorage string and setState\n//               try {\n//                 value = JSON.parse(value);\n//                 this.setState({ [key]: value });\n//               } catch (e) {\n//                 // handle empty string\n//                 this.setState({ [key]: value });\n//               }\n//             }\n//           }\n//         // add event listener to save state to localStorage\n//         // when user leaves/refreshes the page\n//         window.addEventListener(\n//           \"beforeunload\",\n//           this.saveStateToLocalStorage.bind(this)\n//         );\n//       }\n//       componentWillUnmount() {\n//         window.removeEventListener(\n//           \"beforeunload\",\n//           this.saveStateToLocalStorage.bind(this)\n//         );\n//         // saves if component has a chance to unmount\n//         this.saveStateToLocalStorage();\n//       }\n//       saveStateToLocalStorage() {\n//         // for every item in React state\n//         for (let key in this.state) {\n//           // save to localStorage\n//           localStorage.setItem(key, JSON.stringify(this.state[key]));\n//         }\n//       }\n//       updateInput(key, value) {\n//         // update react state\n//         this.setState({ [key]: value });\n//       }\n//   render() {\n//     console.log(this.state.list)\n//     let listitems;\n//     if(this.state.list){\n//         listitems = this.state.list.map(l=>{\n//             return <div> \n//                 {l.quantity} {l.value} {l.section}\n//                 </div>\n//         })\n//     }\n//     return (\n//       <div>\n//         <div className=\"App\">\n//             <div className=\"container\">\n//                 {listitems}\n//             </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n// class ListItem extends React.Components{\n//     constructor(props) {\n//         super(props);\n//     }\n//     render(){\n//         return(\n//             <div className=\"\">\n//                   Test\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/List.js"],"names":["React","Component","ListApp","props","onSave","bind","onDelete","state","grocs","id","title","section","ingredients","nextGrocId","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","window","addEventListener","saveStateToLocalStorage","removeEventListener","setItem","stringify","prevState","newGroc","filter","r","Groc","GrocInput","handleChange","handleNewIngredient","handleChangeIng","handleChangeSec","handleSubmit","target","name","index","Number","split","map","ing","i","preventDefault","inputs","sectionOptions","alignSelf","marginRight","updateInput","defaultProps","onClose","GrocList","console","log","upGrocs"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\n\nclass ListApp extends Component {\n    constructor(props) {\n      super(props);\n      this.onSave = this.onSave.bind(this);\n      this.onDelete = this.onDelete.bind(this);\n      this.state = {\n        grocs: [\n          {\n            id: 0,\n            title: \"Eggs\",\n            section: \"Refrigerated\",\n            ingredients: []\n          },\n          {\n            id: 1,\n            title: \"Bananas\",\n            section: \"Produce\",\n            ingredients: []\n          }\n        ],\n        nextGrocId: 2     \n      }\n    }\n    \n //LocalStorage:\n  componentDidMount() {\n    // for all items in state\n    for (let key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          let value = localStorage.getItem(key);\n  \n          // parse the localStorage string and setState\n          try {\n            value = JSON.parse(value);\n            this.setState({ [key]: value });\n          } catch (e) {\n            // handle empty string\n            this.setState({ [key]: value });\n          }\n        }\n      }\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n\n  }\n\n\n\n\n    onSave(grocs) {\n      this.setState((prevState) => {\n        const newGroc = {...grocs, id: this.state.nextGrocId};\n        return {\n          nextGrocId: prevState.nextGrocId + 1,\n          grocs: [...this.state.grocs, newGroc],\n         \n        }\n      });\n    }\n    \n    onDelete(id) {\n      const grocs = this.state.grocs.filter(r => r.id !== id);\n      this.setState({grocs});\n    }\n    \n    render() {\n      // console.log(this.props.upGrocs.length)\n      return (\n        \n        <div className=\"App\">\n\n         <div className=\"container\">\n          \n          \n          <h3>List groceries here:</h3>\n          <GrocInput onSave={this.onSave} /> \n          <GrocList onDelete={this.onDelete} \n              grocs={this.state.grocs} />\n          \n        </div></div>\n      );\n    }\n\n  }\n  \n  export default ListApp;\n\n\n\nclass Groc extends Component{\n    render(){\n        const {title, id, section, onDelete} = this.props;\n        \n        return(<li key={id} className=\"list-item\">\n            <div className=\"list-item\">\n            <div className=\"list-item__container\">\n              <div>\n                {title}\n              </div>\n              <div>\n                <span className=\"section-display\">{section}</span>\n                <button type=\"button\"\n                className = \"button x-button\" \n                onClick={() => onDelete(id)}>          \n                X\n                </button>\n               </div>\n            </div>\n        </div></li>)\n    }\n}\n\n\nclass GrocInput extends Component {\n    static defaultProps = {\n      onClose() {},\n      onSave() {}\n    }\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        title: '',\n        section: '',\n        ingredients: [''],\n      };\n      \n      this.handleChange = this.handleChange.bind(this);\n      this.handleNewIngredient = this.handleNewIngredient.bind(this);\n      this.handleChangeIng = this.handleChangeIng.bind(this);\n      this.handleChangeSec = this.handleChangeSec.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(e) {\n      this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleChangeSec(e) {\n        this.setState({[e.target.name]: e.target.value});\n      }\n    \n    handleNewIngredient(e) {\n      const {ingredients} = this.state;\n      this.setState({ingredients: [...ingredients, '']});\n    }\n    \n    handleChangeIng(e) {\n      const index = Number(e.target.name.split('-')[1]);\n      const ingredients = this.state.ingredients.map((ing, i) => (\n        i === index ? e.target.value : ing\n      ));\n      this.setState({ingredients});\n    }\n    \n    handleSubmit(e) {\n      e.preventDefault();\n      this.props.onSave({...this.state});\n      this.setState({\n        title: '',\n        section: '',\n        ingredients: [''],\n      })\n    }\n    \n    render() {\n      const {title, ingredients,section} = this.state;\n      //const {onClose} = this.props;\n      let inputs = ingredients.map((ing, i) => (\n        <div\n          className=\"recipe-form-line\"\n          key={`ingredient-${i}`}\n        >\n          <label>{i+1}.\n            <input\n              type=\"text\"\n              name={`ingredient-${i}`}\n              value={ing}\n              \n              autoComplete=\"off\"\n              placeholder=\" Ingredient\"\n              onChange={this.handleChangeIng} />\n          </label>\n        </div>\n      ));\n      let sectionOptions = section.map(section =>{\n        return <option key={section} value=\"section\">{section} </option> \n      }) \n      return (\n        <div className=\"recipe-form-container\">\n          <form className='recipe-form' onSubmit={this.handleSubmit}>\n\n            <div className='recipe-form-line'>\n              <label htmlFor='recipe-title-input'>item:</label>\n              <br />\n              <input\n                id='recipe-title-input'\n                key='title'\n                name='title'\n                type='text'\n                value={title}\n                autoComplete=\"off\"\n                onChange={this.handleChange}/>\n                <br />\n                <label htmlFor='recipe-title-input'> section:</label>\n                <br />\n                <input\n                  id='recipe-section-input'\n                  key='section'\n                  name='section'\n                  type='text'\n                  //value={section}\n                  autoComplete=\"off\"\n                  onChange={this.handleChange}/>\n            </div>\n\n \n            <button\n              type=\"submit\"\n              className=\"buttons\"\n              style={{alignSelf: 'flex-end', marginRight: 0}}\n            >\n              add item\n            </button>\n\n            <select >\n            onChange={e => this.updateInput(\"newSection\", e.target.value)}\n              {sectionOptions}\n            </select>\n          \n\n          </form>\n        </div>\n      )\n    }\n  }\n  \n  \n\n  class GrocList extends Component {\n\n    \n    render() {\n      console.log(\"list test:\"+this.props.upGrocs)\n      const {onDelete} = this.props;\n      \n      const grocs = this.props.grocs.map((r,index) => (\n        <Groc key={r.id} {...r} onDelete={onDelete} />\n      \n      ));\n      \n      return (\n        <ul>\n        {grocs}\n         \n        </ul>\n      )\n    \n    }\n  }\n  \n \n\n\n\n// export default class List extends Component {\n\n//     static defaultProps = {\n//         sections: [\"Produce\", \"Refrigerated\", \"Frozen\", \"Pharma\", \"Other Food\", \"Other items (not food)\"]\n//       };\n    \n//       constructor(props) {\n//         super(props);\n//         this.state = {\n//           list: [\n//               { \n//                 id: 0,\n//                 ingredient: 'Eggs',\n//                 quantity: 1,\n//                 section: 'Refrigerated'\n//               },\n//           ],\n//           newItem: \"\",\n//           newQuantity: 1,\n//           newSection: ''\n//         };\n//       }\n    \n    \n//       componentDidMount() {\n//         // for all items in state\n//         for (let key in this.state) {\n//             // if the key exists in localStorage\n//             if (localStorage.hasOwnProperty(key)) {\n//               // get the key's value from localStorage\n//               let value = localStorage.getItem(key);\n      \n//               // parse the localStorage string and setState\n//               try {\n//                 value = JSON.parse(value);\n//                 this.setState({ [key]: value });\n                \n//               } catch (e) {\n//                 // handle empty string\n//                 this.setState({ [key]: value });\n//               }\n//             }\n//           }\n    \n//         // add event listener to save state to localStorage\n//         // when user leaves/refreshes the page\n//         window.addEventListener(\n//           \"beforeunload\",\n//           this.saveStateToLocalStorage.bind(this)\n//         );\n//       }\n    \n//       componentWillUnmount() {\n//         window.removeEventListener(\n//           \"beforeunload\",\n//           this.saveStateToLocalStorage.bind(this)\n//         );\n    \n//         // saves if component has a chance to unmount\n//         this.saveStateToLocalStorage();\n//       }\n    \n    \n//       saveStateToLocalStorage() {\n//         // for every item in React state\n//         for (let key in this.state) {\n//           // save to localStorage\n//           localStorage.setItem(key, JSON.stringify(this.state[key]));\n//         }\n//       }\n    \n//       updateInput(key, value) {\n//         // update react state\n//         this.setState({ [key]: value });\n    \n//       }\n\n\n\n\n  \n//   render() {\n    \n//     console.log(this.state.list)\n//     let listitems;\n//     if(this.state.list){\n//         listitems = this.state.list.map(l=>{\n//             return <div> \n//                 {l.quantity} {l.value} {l.section}\n//                 </div>\n//         })\n//     }\n//     return (\n//       <div>\n//         <div className=\"App\">\n//             <div className=\"container\">\n//                 {listitems}\n//             </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n\n// class ListItem extends React.Components{\n//     constructor(props) {\n//         super(props);\n//     }\n//     render(){\n//         return(\n//             <div className=\"\">\n//                   Test\n//             </div>\n//         )\n//     }\n// }"]},"metadata":{},"sourceType":"module"}