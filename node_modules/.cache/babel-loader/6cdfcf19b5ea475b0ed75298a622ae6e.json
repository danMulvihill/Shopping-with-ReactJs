{"ast":null,"code":"import _assertThisInitialized from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dan/react-sites/shoppingApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dan/react-sites/shoppingApp/src/RecipeApp.js\";\nimport React, { Component } from 'react'; // import List from './List';\n\nimport './styles/RecipeApp.css';\n\nvar RecipeApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeApp, _Component);\n\n  function RecipeApp(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipeApp).call(this, props)); // this.onSave = this.onSave.bind(this);\n    // this.onDelete = this.onDelete.bind(this);\n\n    _this.onSave = function (recipe) {\n      _this.setState(function (prevState) {\n        var newRecipe = _objectSpread({}, recipe, {\n          id: _this.state.nextRecipeId\n        });\n\n        return {\n          nextRecipeId: prevState.nextRecipeId + 1,\n          recipes: _toConsumableArray(_this.state.recipes).concat([newRecipe])\n        };\n      });\n    };\n\n    _this.onDelete = function (id) {\n      var recipes = _this.state.recipes.filter(function (r) {\n        return r.id !== id;\n      });\n\n      _this.setState({\n        recipes: recipes\n      });\n    };\n\n    _this.state = {\n      recipes: [{\n        id: 0,\n        title: \"Spaghetti\",\n        ingredients: [\"pasta\", \"spaghetti sauce\"]\n      }, {\n        id: 1,\n        title: \"PB&J Sandwiches\",\n        ingredients: [\"Bread\", \"Peanut Butter\", \"Jelly\"]\n      }],\n      nextRecipeId: 2\n    };\n    return _this;\n  } //LocalStorage:\n\n\n  _createClass(RecipeApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      } // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      // update react state\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.upRecipes.length)\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Add a recipe:\"), React.createElement(RecipeList, {\n        onDelete: this.onDelete,\n        recipes: this.state.recipes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(RecipeInput, {\n        onSave: this.onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeApp;\n}(Component);\n\nexport default RecipeApp;\n\nvar Recipe =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Recipe, _Component2);\n\n  function Recipe() {\n    _classCallCheck(this, Recipe);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Recipe).apply(this, arguments));\n  }\n\n  _createClass(Recipe, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          id = _this$props.id,\n          onDelete = _this$props.onDelete;\n      var ingredients = this.props.ingredients.map(function (ing, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, ing);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"delrec\",\n        type: \"button\",\n        onClick: function onClick() {\n          return onDelete(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"delete recipe\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, title), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, ingredients), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Recipe;\n}(Component);\n\nvar RecipeInput =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(RecipeInput, _Component3);\n\n  function RecipeInput(props) {\n    var _this2;\n\n    _classCallCheck(this, RecipeInput);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(RecipeInput).call(this, props));\n    _this2.state = {\n      title: '',\n      ingredients: ['']\n    };\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleNewIngredient = _this2.handleNewIngredient.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleChangeIng = _this2.handleChangeIng.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleSubmit = _this2.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(RecipeInput, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleNewIngredient\",\n    value: function handleNewIngredient(e) {\n      var ingredients = this.state.ingredients;\n      this.setState({\n        ingredients: _toConsumableArray(ingredients).concat([''])\n      });\n    }\n  }, {\n    key: \"handleChangeIng\",\n    value: function handleChangeIng(e) {\n      var index = Number(e.target.name.split('-')[1]);\n      var ingredients = this.state.ingredients.map(function (ing, i) {\n        return i === index ? e.target.value : ing;\n      });\n      this.setState({\n        ingredients: ingredients\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.props.onSave(_objectSpread({}, this.state));\n      this.setState({\n        title: '',\n        ingredients: ['']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          title = _this$state.title,\n          ingredients = _this$state.ingredients; //const {onClose} = this.props;\n\n      var inputs = ingredients.map(function (ing, i) {\n        return React.createElement(\"div\", {\n          className: \"recipe-form-line\",\n          key: \"ingredient-\".concat(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, i + 1, \".\", React.createElement(\"input\", {\n          type: \"text\",\n          name: \"ingredient-\".concat(i),\n          value: ing,\n          autoComplete: \"off\",\n          placeholder: \" Ingredient\",\n          onChange: _this3.handleChangeIng,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        className: \"recipe-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"recipe-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-form-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"recipe-title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"title:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"recipe-title-input\",\n        key: \"title\",\n        name: \"title\",\n        type: \"text\",\n        value: title,\n        autoComplete: \"off\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), \"List ingredents:\", inputs, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleNewIngredient,\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"buttons\",\n        style: {\n          alignSelf: 'flex-end',\n          marginRight: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"save recipe\")));\n    }\n  }]);\n\n  return RecipeInput;\n}(Component);\n\nRecipeInput.defaultProps = {\n  onClose: function onClose() {},\n  onSave: function onSave() {}\n};\n\nvar RecipeList =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(RecipeList, _Component4);\n\n  function RecipeList() {\n    _classCallCheck(this, RecipeList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecipeList).apply(this, arguments));\n  }\n\n  _createClass(RecipeList, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"list test:\" + this.props.upRecipes);\n      var onDelete = this.props.onDelete;\n      var recipes = this.props.recipes.map(function (r, index) {\n        return React.createElement(Recipe, Object.assign({\n          key: r.id\n        }, r, {\n          onDelete: onDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"recipe-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, recipes);\n    }\n  }]);\n\n  return RecipeList;\n}(Component);","map":{"version":3,"sources":["/home/dan/react-sites/shoppingApp/src/RecipeApp.js"],"names":["React","Component","RecipeApp","props","onSave","recipe","setState","prevState","newRecipe","id","state","nextRecipeId","recipes","onDelete","filter","r","title","ingredients","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","e","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","setItem","stringify","Recipe","map","ing","index","RecipeInput","handleChange","handleNewIngredient","handleChangeIng","handleSubmit","target","name","Number","split","i","preventDefault","inputs","alignSelf","marginRight","defaultProps","onClose","RecipeList","console","log","upRecipes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import List from './List';\nimport './styles/RecipeApp.css'\n\nclass RecipeApp extends Component {\n    constructor(props) {\n      super(props);\n      // this.onSave = this.onSave.bind(this);\n      // this.onDelete = this.onDelete.bind(this);\n      this.state = {\n        recipes: [\n          {\n            id: 0,\n            title: \"Spaghetti\",\n            ingredients: [\"pasta\", \"spaghetti sauce\"],\n          },\n          {\n            id: 1,\n            title: \"PB&J Sandwiches\",\n            ingredients: [\"Bread\", \"Peanut Butter\", \"Jelly\"],\n          }\n        ],\n        nextRecipeId: 2     \n      }\n    }\n    \n //LocalStorage:\n  componentDidMount() {\n    // for all items in state\n    for (let key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          let value = localStorage.getItem(key);\n  \n          // parse the localStorage string and setState\n          try {\n            value = JSON.parse(value);\n            this.setState({ [key]: value });\n          } catch (e) {\n            // handle empty string\n            this.setState({ [key]: value });\n          }\n        }\n      }\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n\n  }\n\n\n\n\n    onSave = (recipe) => {\n      this.setState((prevState) => {\n        const newRecipe = {...recipe, id: this.state.nextRecipeId};\n        return {\n          nextRecipeId: prevState.nextRecipeId + 1,\n          recipes: [...this.state.recipes, newRecipe],\n         \n        }\n      });\n    }\n    \n    onDelete = (id) => {\n      const recipes = this.state.recipes.filter(r => r.id !== id);\n      this.setState({recipes});\n    }\n    \n    render() {\n      // console.log(this.props.upRecipes.length)\n      return (\n        \n        <div className=\"App\">\n\n         <div className=\"container\">\n          \n          \n          <h3>Add a recipe:</h3>\n          \n          <RecipeList onDelete={this.onDelete} \n              recipes={this.state.recipes} />\n              <RecipeInput onSave={this.onSave} /> \n              \n        </div></div>\n      );\n    }\n\n  }\n  \n  export default RecipeApp;\n\n\n\nclass Recipe extends Component{\n    render(){\n        const {title, id, onDelete} = this.props;\n        const ingredients = this.props.ingredients.map((ing,index) => ( \n            <li key={index}>{ing}</li>\n        ))\n        return(<div>\n          <button className=\"delrec\" type=\"button\" onClick={() => onDelete(id)}>delete recipe</button>\n            <div>{title}</div>\n            <ul>{ingredients}</ul>\n           \n            <hr />\n        </div>)\n    }\n}\n\n\nclass RecipeInput extends Component {\n    static defaultProps = {\n      onClose() {},\n      onSave() {}\n    }\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        title: '',\n        ingredients: [''],\n      };\n      \n      this.handleChange = this.handleChange.bind(this);\n      this.handleNewIngredient = this.handleNewIngredient.bind(this);\n      this.handleChangeIng = this.handleChangeIng.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(e) {\n      this.setState({[e.target.name]: e.target.value});\n    }\n    \n    handleNewIngredient(e) {\n      const {ingredients} = this.state;\n      this.setState({ingredients: [...ingredients, '']});\n    }\n    \n    handleChangeIng(e) {\n      const index = Number(e.target.name.split('-')[1]);\n      const ingredients = this.state.ingredients.map((ing, i) => (\n        i === index ? e.target.value : ing\n      ));\n      this.setState({ingredients});\n    }\n    \n    handleSubmit(e) {\n      e.preventDefault();\n      this.props.onSave({...this.state});\n      this.setState({\n        title: '',\n        ingredients: [''],\n      })\n    }\n    \n    render() {\n      const {title, ingredients} = this.state;\n      //const {onClose} = this.props;\n      let inputs = ingredients.map((ing, i) => (\n        <div\n          className=\"recipe-form-line\"\n          key={`ingredient-${i}`}\n        >\n          <label>{i+1}.\n            <input\n              type=\"text\"\n              name={`ingredient-${i}`}\n              value={ing}\n              \n              autoComplete=\"off\"\n              placeholder=\" Ingredient\"\n              onChange={this.handleChangeIng} />\n          </label>\n        </div>\n      ));\n      \n      return (\n        <div className=\"recipe-form-container\">\n          <form className='recipe-form' onSubmit={this.handleSubmit}>\n\n            <div className='recipe-form-line'>\n              <label htmlFor='recipe-title-input'>title:</label>\n              <br />\n              <input\n                id='recipe-title-input'\n                key='title'\n                name='title'\n                type='text'\n                value={title}\n                autoComplete=\"off\"\n                onChange={this.handleChange}/>\n            </div>\n            List ingredents:\n            {inputs}\n            <button\n              type=\"button\"\n              onClick={this.handleNewIngredient}\n              className=\"buttons\"\n            >\n              +\n            </button>\n \n            <button\n              type=\"submit\"\n              className=\"buttons\"\n              style={{alignSelf: 'flex-end', marginRight: 0}}\n            >\n              save recipe\n            </button>\n\n          </form>\n        </div>\n      )\n    }\n  }\n  \n  \n\n  class RecipeList extends Component {\n\n    \n    render() {\n      console.log(\"list test:\"+this.props.upRecipes)\n      const {onDelete} = this.props;\n      const recipes = this.props.recipes.map((r,index) => (\n        <Recipe key={r.id} {...r} onDelete={onDelete} />\n      ));\n      \n      return (\n        <div className=\"recipe-list\">\n        {recipes}\n         \n        </div>\n      )\n    \n    }\n  }\n  \n \n"]},"metadata":{},"sourceType":"module"}